            //orientation
            var m = object.matrix;
            var mx = m.elements[12],
                my = m.elements[13],
                mz = m.elements[14];
            m.elements[12] = m.elements[13] = m.elements[14] = 0;
            //devant
            var vec = new THREE.Vector3(0, 0, 4);
            vec.applyProjection(m);
            vec.normalize();
            //dessu
            var up = new THREE.Vector3(0, -1, 0);
            up.applyProjection(m);
            up.normalize();
            this.audio.context.listener.setOrientation(vec.x, vec.y, vec.z, up.x, up.y, up.z);
            m.elements[12] = mx;
            m.elements[13] = my;
            m.elements[14] = mz;

            /////////
                        var object = new THREE.Object3D();
            var q = new THREE.Vector3();
            object.updateMatrixWorld();
            q.setFromMatrixPosition(object.matrixWorld);
           ///// sample.panner.setPosition(q.x, q.y, q.z);
                        //orientation
            var m = object.matrix;
            var mx = m.elements[12],
                my = m.elements[13],
                mz = m.elements[14];
            m.elements[12] = m.elements[13] = m.elements[14] = 0;
            //devant
            var vec = new THREE.Vector3(0, 0, 1);
            vec.applyProjection(m);
            vec.normalize();
            //dessu
            var up = new THREE.Vector3(0, -1, 0);
            up.applyProjection(m);
            up.normalize();
            sample.panner.setOrientation(vec.x, vec.y, vec.z, up.x, up.y, up.z);
            m.elements[12] = mx;
            m.elements[13] = my;
            m.elements[14] = mz;